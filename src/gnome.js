// 地精排序

// 请注意，地精排序是一种玩笑话，它实际上是一种糟糕的排序算法，而不是真正的排序算法。

// 地精排序的基本思想是：对于一个长度为n的数组，从第一个元素开始，将其与下一个元素进行比较，如果下一个元素比当前元素小，则将它们交换位置。
// 然后，继续从第二个元素开始，进行同样的操作，直到数组末尾。然后，重复以上步骤，直到整个数组都有序。

// 然而，地精排序的时间复杂度为 O(n^2)，因此它并不是一个有效的排序算法。
// 在实际应用中，不应该使用地精排序，而是使用更为有效的排序算法，例如快速排序、归并排序、堆排序、计数排序等等。

async function goblinSort() {
    let sorted = false
    while (!sorted) {
        sorted = true
        for (let i = 0; i < arr.length - 1; i++) {
            if (arr[i] > arr[i + 1]) {
                await swap(i, i + 1)
                sorted = false
            }
        }
    }
}